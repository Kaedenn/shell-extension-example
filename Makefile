# Makefile for example@kaedenn.net gnome-extension
 
# When creating the packed extension, the version number in metadata.json
# is automatically incremented by 0.01. This increment can be changed by
# setting VER_STEP. Setting VER_STEP=0 will prevent this modification.

# Use the following command to examine the logs generated by this extension:
#     journalctl -a -b -e
# This will open a pager with the logs from the current boot session and jump
# to the end of those logs.

# Configuration:
#   BUILD           build directory name/path
#   ADD_FILES       extra files to add to the packed extension
#   GEXT            'gnome-extensions' command
#   GEXT_ARGS       extra arguments to pass to GEXT
#   PYTHON          'python' or 'python3' command
#   INC_ARGS        extra arguments to pass to PY_INC
#   SHEXEC_ARGS     extra arguments to pass to PY_SHEXEC
#   VER_STEP        version auto-increment value (normally 0.01)
#   PY_INC          increment.py command and arguments
#   PY_SHEXEC       shell-exec.py command and arguments

# Programs
GEXT ?= gnome-extensions $(GEXT_ARGS)
PYTHON ?= python3

# Files and directories
BUILD ?= build
METADATA := metadata.json
BASE_SOURCES := extension.js prefs.js
EXTRA_SOURCES := $(filter-out $(BASE_SOURCES),$(wildcard *.js))
SOURCES := $(wildcard *.js) $(METADATA) Makefile
UUID := $(shell awk -F'"' '$$2=="uuid"{ print $$4 }' $(METADATA))
PACK := $(UUID).shell-extension.zip
PACKED := $(BUILD)/$(PACK)

ifneq ($(ADD_FILES),)
  EXTRA_SOURCES += $(ADD_FILES)
endif

# Scripts and script parameters
VER_STEP ?= 0.01  # Version delta
INC_ARGS ?=
PY_INC ?= $(PYTHON) increment.py $(INC_ARGS)
SHEXEC_ARGS ?=
PY_SHEXEC ?= $(PYTHON) shell-exec.py $(SHEXEC_ARGS)
QUERY_ARGS ?=
PY_QUERY ?= $(PYTHON) query-ext.py $(QUERY_ARGS)

.PHONY: all clean force-install reload restart
.PHONY: enable disable info show prefs pack install uninstall

all: $(PACKED)

clean:
	rm -rf $(BUILD)

enable:
	$(GEXT) enable $(UUID)

disable:
	$(GEXT) disable $(UUID)

reset:
	$(GEXT) reset $(UUID)

info:
	$(GEXT) info $(UUID)
	$(PY_QUERY) -j -u $(UUID)

show:
	$(GEXT) show $(UUID)
	$(PY_QUERY) -j -u $(UUID)

prefs:
	$(GEXT) prefs $(UUID)

pack: $(PACKED)

install: $(PACKED)
	$(GEXT) install $(PACKED)

uninstall:
	$(GEXT) uninstall $(UUID)

force-install: $(PACKED)
	$(GEXT) uninstall $(UUID)
	$(GEXT) install $(PACKED)
	$(PY_SHEXEC) -r 'imports.gi.Meta.restart("Restarting")'
	$(PY_QUERY) -j -u $(UUID) -s 2 # Sleep for two seconds before running

reload:
	$(GEXT) reset $(UUID)
	$(GEXT) info $(UUID)
	$(GEXT) enable $(UUID)
	$(GEXT) info $(UUID)
	$(PY_QUERY) -j -u $(UUID)

restart:
	$(PY_SHEXEC) -r 'imports.gi.Meta.restart("Restarting")'

$(PACKED): $(SOURCES)
	mkdir -p $(BUILD)
	$(PY_INC) $(METADATA) -O -i $(VER_STEP) -B $(BUILD)
	$(GEXT) pack --force $(patsubst %,--extra-source=%,$(EXTRA_SOURCES)) -o $(BUILD)

print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true

# vim: set ts=4:
