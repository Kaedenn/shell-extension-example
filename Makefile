
# Makefile for example@kaedenn.net gnome-extension
# 
# When creating the packed extension, the version number in metadata.json
# is automatically incremented by 0.1. This increment can be changed by setting
# VER_STEP. Setting VER_STEP=0 will result in the version number being
# unmodified.

# To examine the logs generated by this extension, use the following command:
#     journalctl -a -b -e
# This will show all journal logs for the current boot session and jump to the
# end of the logs.

METADATA := metadata.json
BASE_SOURCES := extension.js prefs.js
EXTRA_SOURCES := $(filter-out $(BASE_SOURCES),$(wildcard *.js))
ALL_SOURCES := $(wildcard *.js) $(METADATA) Makefile
BUILD := build
UUID := $(shell awk -F'"' '$$2=="uuid"{ print $$4 }' $(METADATA))
PACK := $(UUID).shell-extension.zip

GNOME_EXT ?= gnome-extensions
INC_ARGS ?=
INCREMENT ?= python3 increment.py $(INC_ARGS)
VER_STEP ?= 0.01

.PHONY: all clean install force-install prefs reload

all: $(BUILD)/$(PACK)

clean:
	rm -rf $(BUILD)
	rm metadata.json.backup*

install: $(BUILD)/$(PACK)
	$(GNOME_EXT) install $(BUILD)/$(PACK)

force-install: $(BUILD)/$(PACK)
	-$(GNOME_EXT) uninstall $(UUID)
	$(GNOME_EXT) install $(BUILD)/$(PACK)
	python3 ./shell-exec.py -r 'imports.gi.Meta.restart("Restarting")'

prefs:
	$(GNOME_EXT) prefs $(UUID)

reload:
	$(GNOME_EXT) reset $(UUID)
	$(GNOME_EXT) info $(UUID)
	$(GNOME_EXT) enable $(UUID)
	$(GNOME_EXT) info $(UUID)

$(BUILD)/$(PACK): $(ALL_SOURCES)
	rm -rf $(BUILD)
	mkdir $(BUILD)
	$(INCREMENT) $(METADATA) -O -i $(VER_STEP)
	$(GNOME_EXT) pack $(patsubst %,--extra-source=%,$(EXTRA_SOURCES)) -o $(BUILD)

print-% : ; $(info $* is a $(flavor $*) variable set to [$($*)]) @true

# vim: set ts=4:
